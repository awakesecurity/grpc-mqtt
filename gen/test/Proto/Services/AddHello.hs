{-# LANGUAGE DeriveGeneric     #-}
{-# LANGUAGE DeriveAnyClass    #-}
{-# LANGUAGE DataKinds         #-}
{-# LANGUAGE GADTs             #-}
{-# LANGUAGE TypeApplications  #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- | Generated by Haskell protocol buffer compiler. DO NOT EDIT!
module Proto.Services.AddHello where
import qualified Prelude as Hs
import qualified Proto3.Suite.Class as HsProtobuf
import qualified Proto3.Suite.DotProto as HsProtobuf
import qualified Proto3.Suite.JSONPB as HsJSONPB
import Proto3.Suite.JSONPB ((.=), (.:))
import qualified Proto3.Suite.Types as HsProtobuf
import qualified Proto3.Wire as HsProtobuf
import qualified Control.Applicative as Hs
import Control.Applicative ((<*>), (<|>), (<$>))
import qualified Control.DeepSeq as Hs
import qualified Control.Monad as Hs
import qualified Data.ByteString as Hs
import qualified Data.Coerce as Hs
import qualified Data.Int as Hs (Int16, Int32, Int64)
import qualified Data.List.NonEmpty as Hs (NonEmpty(..))
import qualified Data.Map as Hs (Map, mapKeysMonotonic)
import qualified Data.Proxy as Proxy
import qualified Data.String as Hs (fromString)
import qualified Data.Text.Lazy as Hs (Text)
import qualified Data.Vector as Hs (Vector)
import qualified Data.Word as Hs (Word16, Word32, Word64)
import qualified GHC.Enum as Hs
import qualified GHC.Generics as Hs
import qualified Unsafe.Coerce as Hs
import Network.GRPC.HighLevel.Generated as HsGRPC
import Network.GRPC.HighLevel.Client as HsGRPC
import Network.GRPC.HighLevel.Server as HsGRPC hiding (serverLoop)
import Network.GRPC.HighLevel.Server.Unregistered as HsGRPC
       (serverLoop)
import qualified Proto.Messages
 
data AddHello request response = AddHello{addHelloAdd ::
                                          request 'HsGRPC.Normal Proto.Messages.TwoInts
                                            Proto.Messages.OneInt
                                            ->
                                            Hs.IO (response 'HsGRPC.Normal Proto.Messages.OneInt),
                                          addHelloHelloSS ::
                                          request 'HsGRPC.ServerStreaming Proto.Messages.SSRqt
                                            Proto.Messages.SSRpy
                                            ->
                                            Hs.IO
                                              (response 'HsGRPC.ServerStreaming
                                                 Proto.Messages.SSRpy),
                                          addHelloRunningSum ::
                                          request 'HsGRPC.ClientStreaming Proto.Messages.OneInt
                                            Proto.Messages.OneInt
                                            ->
                                            Hs.IO
                                              (response 'HsGRPC.ClientStreaming
                                                 Proto.Messages.OneInt),
                                          addHelloHelloBi ::
                                          request 'HsGRPC.BiDiStreaming Proto.Messages.BiRqtRpy
                                            Proto.Messages.BiRqtRpy
                                            ->
                                            Hs.IO
                                              (response 'HsGRPC.BiDiStreaming
                                                 Proto.Messages.BiRqtRpy),
                                          addHelloHelloSSBatch ::
                                          request 'HsGRPC.ServerStreaming Proto.Messages.SSRqt
                                            Proto.Messages.SSRpy
                                            ->
                                            Hs.IO
                                              (response 'HsGRPC.ServerStreaming
                                                 Proto.Messages.SSRpy),
                                          addHelloRunningSumBatch ::
                                          request 'HsGRPC.ClientStreaming Proto.Messages.OneInt
                                            Proto.Messages.OneInt
                                            ->
                                            Hs.IO
                                              (response 'HsGRPC.ClientStreaming
                                                 Proto.Messages.OneInt),
                                          addHelloHelloBiBatch ::
                                          request 'HsGRPC.BiDiStreaming Proto.Messages.BiRqtRpy
                                            Proto.Messages.BiRqtRpy
                                            ->
                                            Hs.IO
                                              (response 'HsGRPC.BiDiStreaming
                                                 Proto.Messages.BiRqtRpy)}
                               deriving Hs.Generic
 
addHelloServer ::
                 AddHello HsGRPC.ServerRequest HsGRPC.ServerResponse ->
                   HsGRPC.ServiceOptions -> Hs.IO ()
addHelloServer
  AddHello{addHelloAdd = addHelloAdd,
           addHelloHelloSS = addHelloHelloSS,
           addHelloRunningSum = addHelloRunningSum,
           addHelloHelloBi = addHelloHelloBi,
           addHelloHelloSSBatch = addHelloHelloSSBatch,
           addHelloRunningSumBatch = addHelloRunningSumBatch,
           addHelloHelloBiBatch = addHelloHelloBiBatch}
  (ServiceOptions serverHost serverPort useCompression
     userAgentPrefix userAgentSuffix initialMetadata sslConfig logger
     serverMaxReceiveMessageLength)
  = (HsGRPC.serverLoop
       HsGRPC.defaultOptions{HsGRPC.optNormalHandlers =
                               [(HsGRPC.UnaryHandler (HsGRPC.MethodName "/test.AddHello/Add")
                                   (HsGRPC.convertGeneratedServerHandler addHelloAdd))],
                             HsGRPC.optClientStreamHandlers =
                               [(HsGRPC.ClientStreamHandler
                                   (HsGRPC.MethodName "/test.AddHello/RunningSum")
                                   (HsGRPC.convertGeneratedServerReaderHandler addHelloRunningSum)),
                                (HsGRPC.ClientStreamHandler
                                   (HsGRPC.MethodName "/test.AddHello/RunningSumBatch")
                                   (HsGRPC.convertGeneratedServerReaderHandler
                                      addHelloRunningSumBatch))],
                             HsGRPC.optServerStreamHandlers =
                               [(HsGRPC.ServerStreamHandler
                                   (HsGRPC.MethodName "/test.AddHello/HelloSS")
                                   (HsGRPC.convertGeneratedServerWriterHandler addHelloHelloSS)),
                                (HsGRPC.ServerStreamHandler
                                   (HsGRPC.MethodName "/test.AddHello/HelloSSBatch")
                                   (HsGRPC.convertGeneratedServerWriterHandler
                                      addHelloHelloSSBatch))],
                             HsGRPC.optBiDiStreamHandlers =
                               [(HsGRPC.BiDiStreamHandler
                                   (HsGRPC.MethodName "/test.AddHello/HelloBi")
                                   (HsGRPC.convertGeneratedServerRWHandler addHelloHelloBi)),
                                (HsGRPC.BiDiStreamHandler
                                   (HsGRPC.MethodName "/test.AddHello/HelloBiBatch")
                                   (HsGRPC.convertGeneratedServerRWHandler addHelloHelloBiBatch))],
                             optServerHost = serverHost, optServerPort = serverPort,
                             optUseCompression = useCompression,
                             optUserAgentPrefix = userAgentPrefix,
                             optUserAgentSuffix = userAgentSuffix,
                             optInitialMetadata = initialMetadata, optSSLConfig = sslConfig,
                             optLogger = logger,
                             optMaxReceiveMessageLength = serverMaxReceiveMessageLength})
 
addHelloClient ::
                 HsGRPC.Client ->
                   Hs.IO (AddHello HsGRPC.ClientRequest HsGRPC.ClientResult)
addHelloClient client
  = (Hs.pure AddHello) <*>
      ((Hs.pure (HsGRPC.clientRequest client)) <*>
         (HsGRPC.clientRegisterMethod client
            (HsGRPC.MethodName "/test.AddHello/Add")))
      <*>
      ((Hs.pure (HsGRPC.clientRequest client)) <*>
         (HsGRPC.clientRegisterMethod client
            (HsGRPC.MethodName "/test.AddHello/HelloSS")))
      <*>
      ((Hs.pure (HsGRPC.clientRequest client)) <*>
         (HsGRPC.clientRegisterMethod client
            (HsGRPC.MethodName "/test.AddHello/RunningSum")))
      <*>
      ((Hs.pure (HsGRPC.clientRequest client)) <*>
         (HsGRPC.clientRegisterMethod client
            (HsGRPC.MethodName "/test.AddHello/HelloBi")))
      <*>
      ((Hs.pure (HsGRPC.clientRequest client)) <*>
         (HsGRPC.clientRegisterMethod client
            (HsGRPC.MethodName "/test.AddHello/HelloSSBatch")))
      <*>
      ((Hs.pure (HsGRPC.clientRequest client)) <*>
         (HsGRPC.clientRegisterMethod client
            (HsGRPC.MethodName "/test.AddHello/RunningSumBatch")))
      <*>
      ((Hs.pure (HsGRPC.clientRequest client)) <*>
         (HsGRPC.clientRegisterMethod client
            (HsGRPC.MethodName "/test.AddHello/HelloBiBatch")))