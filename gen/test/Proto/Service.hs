{-# LANGUAGE DeriveGeneric     #-}
{-# LANGUAGE DeriveAnyClass    #-}
{-# LANGUAGE DataKinds         #-}
{-# LANGUAGE GADTs             #-}
{-# LANGUAGE TypeApplications  #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-unused-imports       #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing       #-}
{-# OPTIONS_GHC -fno-warn-unused-matches       #-}
{-# OPTIONS_GHC -fno-warn-missing-export-lists #-}

-- | Generated by Haskell protocol buffer compiler. DO NOT EDIT!
module Proto.Service where
import qualified Prelude as Hs
import qualified Proto3.Suite.Class as HsProtobuf
import qualified Proto3.Suite.DotProto as HsProtobuf
import qualified Proto3.Suite.JSONPB as HsJSONPB
import Proto3.Suite.JSONPB ((.=), (.:))
import qualified Proto3.Suite.Types as HsProtobuf
import qualified Proto3.Wire as HsProtobuf
import qualified Control.Applicative as Hs
import Control.Applicative ((<*>), (<|>), (<$>))
import qualified Control.DeepSeq as Hs
import qualified Control.Monad as Hs
import qualified Data.ByteString as Hs
import qualified Data.Coerce as Hs
import qualified Data.Int as Hs (Int16, Int32, Int64)
import qualified Data.List.NonEmpty as Hs (NonEmpty(..))
import qualified Data.Map as Hs (Map, mapKeysMonotonic)
import qualified Data.Proxy as Proxy
import qualified Data.String as Hs (fromString)
import qualified Data.Text.Lazy as Hs (Text)
import qualified Data.Vector as Hs (Vector)
import qualified Data.Word as Hs (Word16, Word32, Word64)
import qualified GHC.Enum as Hs
import qualified GHC.Generics as Hs
import qualified Unsafe.Coerce as Hs
import Network.GRPC.HighLevel.Generated as HsGRPC
import Network.GRPC.HighLevel.Client as HsGRPC
import Network.GRPC.HighLevel.Server as HsGRPC hiding (serverLoop)
import Network.GRPC.HighLevel.Server.Unregistered as HsGRPC
       (serverLoop)
import qualified Proto.Message
 
data TestService request
     response = TestService{testServicecallLongBytes ::
                            request 'HsGRPC.Normal Proto.Message.OneInt
                              Proto.Message.BytesResponse
                              -> Hs.IO (response 'HsGRPC.Normal Proto.Message.BytesResponse),
                            testServicenormalCall ::
                            request 'HsGRPC.Normal Proto.Message.TwoInts Proto.Message.OneInt
                              -> Hs.IO (response 'HsGRPC.Normal Proto.Message.OneInt),
                            testServiceServerStreamCall ::
                            request 'HsGRPC.ServerStreaming Proto.Message.StreamRequest
                              Proto.Message.StreamReply
                              ->
                              Hs.IO (response 'HsGRPC.ServerStreaming Proto.Message.StreamReply),
                            testServiceClientStreamCall ::
                            request 'HsGRPC.ClientStreaming Proto.Message.OneInt
                              Proto.Message.OneInt
                              -> Hs.IO (response 'HsGRPC.ClientStreaming Proto.Message.OneInt),
                            testServiceBiDiStreamCall ::
                            request 'HsGRPC.BiDiStreaming Proto.Message.BiDiRequestReply
                              Proto.Message.BiDiRequestReply
                              ->
                              Hs.IO
                                (response 'HsGRPC.BiDiStreaming Proto.Message.BiDiRequestReply),
                            testServiceBatchServerStreamCall ::
                            request 'HsGRPC.ServerStreaming Proto.Message.StreamRequest
                              Proto.Message.StreamReply
                              ->
                              Hs.IO (response 'HsGRPC.ServerStreaming Proto.Message.StreamReply),
                            testServiceBatchClientStreamCall ::
                            request 'HsGRPC.ClientStreaming Proto.Message.OneInt
                              Proto.Message.OneInt
                              -> Hs.IO (response 'HsGRPC.ClientStreaming Proto.Message.OneInt),
                            testServiceBatchBiDiStreamCall ::
                            request 'HsGRPC.BiDiStreaming Proto.Message.BiDiRequestReply
                              Proto.Message.BiDiRequestReply
                              ->
                              Hs.IO
                                (response 'HsGRPC.BiDiStreaming Proto.Message.BiDiRequestReply)}
              deriving Hs.Generic
 
testServiceServer ::
                    TestService HsGRPC.ServerRequest HsGRPC.ServerResponse ->
                      HsGRPC.ServiceOptions -> Hs.IO ()
testServiceServer
  TestService{testServicecallLongBytes = testServicecallLongBytes,
              testServicenormalCall = testServicenormalCall,
              testServiceServerStreamCall = testServiceServerStreamCall,
              testServiceClientStreamCall = testServiceClientStreamCall,
              testServiceBiDiStreamCall = testServiceBiDiStreamCall,
              testServiceBatchServerStreamCall =
                testServiceBatchServerStreamCall,
              testServiceBatchClientStreamCall =
                testServiceBatchClientStreamCall,
              testServiceBatchBiDiStreamCall = testServiceBatchBiDiStreamCall}
  (ServiceOptions serverHost serverPort useCompression
     userAgentPrefix userAgentSuffix initialMetadata sslConfig logger
     serverMaxReceiveMessageLength serverMaxMetadataSize)
  = (HsGRPC.serverLoop
       HsGRPC.defaultOptions{HsGRPC.optNormalHandlers =
                               [(HsGRPC.UnaryHandler
                                   (HsGRPC.MethodName
                                      "/haskell.grpc.mqtt.test.TestService/callLongBytes")
                                   (HsGRPC.convertGeneratedServerHandler testServicecallLongBytes)),
                                (HsGRPC.UnaryHandler
                                   (HsGRPC.MethodName
                                      "/haskell.grpc.mqtt.test.TestService/normalCall")
                                   (HsGRPC.convertGeneratedServerHandler testServicenormalCall))],
                             HsGRPC.optClientStreamHandlers =
                               [(HsGRPC.ClientStreamHandler
                                   (HsGRPC.MethodName
                                      "/haskell.grpc.mqtt.test.TestService/ClientStreamCall")
                                   (HsGRPC.convertGeneratedServerReaderHandler
                                      testServiceClientStreamCall)),
                                (HsGRPC.ClientStreamHandler
                                   (HsGRPC.MethodName
                                      "/haskell.grpc.mqtt.test.TestService/BatchClientStreamCall")
                                   (HsGRPC.convertGeneratedServerReaderHandler
                                      testServiceBatchClientStreamCall))],
                             HsGRPC.optServerStreamHandlers =
                               [(HsGRPC.ServerStreamHandler
                                   (HsGRPC.MethodName
                                      "/haskell.grpc.mqtt.test.TestService/ServerStreamCall")
                                   (HsGRPC.convertGeneratedServerWriterHandler
                                      testServiceServerStreamCall)),
                                (HsGRPC.ServerStreamHandler
                                   (HsGRPC.MethodName
                                      "/haskell.grpc.mqtt.test.TestService/BatchServerStreamCall")
                                   (HsGRPC.convertGeneratedServerWriterHandler
                                      testServiceBatchServerStreamCall))],
                             HsGRPC.optBiDiStreamHandlers =
                               [(HsGRPC.BiDiStreamHandler
                                   (HsGRPC.MethodName
                                      "/haskell.grpc.mqtt.test.TestService/BiDiStreamCall")
                                   (HsGRPC.convertGeneratedServerRWHandler
                                      testServiceBiDiStreamCall)),
                                (HsGRPC.BiDiStreamHandler
                                   (HsGRPC.MethodName
                                      "/haskell.grpc.mqtt.test.TestService/BatchBiDiStreamCall")
                                   (HsGRPC.convertGeneratedServerRWHandler
                                      testServiceBatchBiDiStreamCall))],
                             optServerHost = serverHost, optServerPort = serverPort,
                             optUseCompression = useCompression,
                             optUserAgentPrefix = userAgentPrefix,
                             optUserAgentSuffix = userAgentSuffix,
                             optInitialMetadata = initialMetadata, optSSLConfig = sslConfig,
                             optLogger = logger,
                             optMaxReceiveMessageLength = serverMaxReceiveMessageLength,
                             optMaxMetadataSize = serverMaxMetadataSize})
 
testServiceClient ::
                    HsGRPC.Client ->
                      Hs.IO (TestService HsGRPC.ClientRequest HsGRPC.ClientResult)
testServiceClient client
  = (Hs.pure TestService) <*>
      ((Hs.pure (HsGRPC.clientRequest client)) <*>
         (HsGRPC.clientRegisterMethod client
            (HsGRPC.MethodName
               "/haskell.grpc.mqtt.test.TestService/callLongBytes")))
      <*>
      ((Hs.pure (HsGRPC.clientRequest client)) <*>
         (HsGRPC.clientRegisterMethod client
            (HsGRPC.MethodName
               "/haskell.grpc.mqtt.test.TestService/normalCall")))
      <*>
      ((Hs.pure (HsGRPC.clientRequest client)) <*>
         (HsGRPC.clientRegisterMethod client
            (HsGRPC.MethodName
               "/haskell.grpc.mqtt.test.TestService/ServerStreamCall")))
      <*>
      ((Hs.pure (HsGRPC.clientRequest client)) <*>
         (HsGRPC.clientRegisterMethod client
            (HsGRPC.MethodName
               "/haskell.grpc.mqtt.test.TestService/ClientStreamCall")))
      <*>
      ((Hs.pure (HsGRPC.clientRequest client)) <*>
         (HsGRPC.clientRegisterMethod client
            (HsGRPC.MethodName
               "/haskell.grpc.mqtt.test.TestService/BiDiStreamCall")))
      <*>
      ((Hs.pure (HsGRPC.clientRequest client)) <*>
         (HsGRPC.clientRegisterMethod client
            (HsGRPC.MethodName
               "/haskell.grpc.mqtt.test.TestService/BatchServerStreamCall")))
      <*>
      ((Hs.pure (HsGRPC.clientRequest client)) <*>
         (HsGRPC.clientRegisterMethod client
            (HsGRPC.MethodName
               "/haskell.grpc.mqtt.test.TestService/BatchClientStreamCall")))
      <*>
      ((Hs.pure (HsGRPC.clientRequest client)) <*>
         (HsGRPC.clientRegisterMethod client
            (HsGRPC.MethodName
               "/haskell.grpc.mqtt.test.TestService/BatchBiDiStreamCall")))